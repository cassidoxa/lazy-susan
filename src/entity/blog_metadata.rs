//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.11

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "blog_metadata")]
pub struct Model {
    #[sea_orm(primary_key)]
    #[serde(skip_deserializing)]
    pub id: i32,
    #[sea_orm(column_type = "Text")]
    pub title: String,
    #[sea_orm(column_type = "Text")]
    pub blog_url: String,
    #[sea_orm(column_type = "Text")]
    pub syndication_url: String,
    pub last_updated: DateTimeWithTimeZone,
    #[sea_orm(column_type = "Text")]
    pub author: String,
    #[sea_orm(column_type = "Text", nullable)]
    pub author_email: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub author_url: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
